{"version":3,"sources":["CovidInfo.js","CountriesDropDown.js","App.js","reportWebVitals.js","index.js"],"names":["CovidInfo","props","useState","covidData","setCovidData","onClick","console","log","country","fetch","then","res","json","index","length","Confirmed","Active","Deaths","Recovered","CountriesDropDown","countries","setCountries","htmlFor","onChange","e","target","value","selectedCountry","items","forEach","push","Slug","Country","createSelectItems","App","setCountry","className","childData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAgCeA,MA9Bf,SAAmBC,GAEf,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OACI,gCACI,wBAAQC,QAjBC,WACbC,QAAQC,IAAIN,EAAMO,SAIDC,MAAM,4CAA4CR,EAAMO,SACxEE,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACC,GACHL,QAAQC,IAAII,GACZ,IAAME,EAAQF,EAAIG,OAAQ,EAC1BV,EAAaO,EAAIE,IACjBP,QAAQC,IAAIM,OAMZ,uBACA,8CAAiBV,EAAUY,aAC3B,+CAAkBZ,EAAUa,OAA5B,OACA,+CAAkBb,EAAUc,OAA5B,OACA,kDAAqBd,EAAUe,UAA/B,WCkBGC,MA3Cf,SAA2BlB,GAEvB,MAA+BC,mBAAS,IAAxC,mBAAOkB,EAAP,KAAiBC,EAAjB,KA6BA,OACI,gCACI,uBAAOC,QAAQ,YAAf,6BAGA,wBAAQC,SAhCC,SAACC,GACdlB,QAAQC,IAAIiB,EAAEC,OAAOC,OAErBzB,EAAM0B,gBAAgBH,EAAEC,OAAOC,QA6B3B,SAzBkB,WAEVjB,MAAM,wCACjBC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACC,GACHL,QAAQC,IAAII,GACZU,EAAaV,MAJjB,IAOIiB,EAAS,GAQb,OAPAR,EAAUS,SAAQ,SAAArB,GACdoB,EAAME,KACF,wBAA2BJ,MAAOlB,EAAQuB,KAA1C,SACKvB,EAAQwB,SADAxB,EAAQuB,UAKtBH,EASEK,SCbFC,MArBf,WAEE,MAA6BhC,mBAAS,IAAtC,mBAAOM,EAAP,KAAe2B,EAAf,KAOA,OACE,sBAAKC,UAAU,MAAf,UACE,+DAIA,cAAC,EAAD,CAAmBT,gBAXC,SAACU,GACvB/B,QAAQC,IAAI8B,GACZF,EAAWE,MAUT,cAAC,EAAD,CAAW7B,QAASA,QCTX8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0f118687.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction CovidInfo(props){\r\n\r\n    const [covidData,setCovidData] = useState([])\r\n\r\n    const InfoData = () => {\r\n        console.log(props.country)\r\n\r\n        let items = []\r\n\r\n        const response = fetch(\"https://api.covid19api.com/total/country/\"+props.country)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            console.log(res)\r\n            const index = res.length -1\r\n            setCovidData(res[index])\r\n            console.log(index)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={InfoData}>Take Data</button>\r\n            <h1>Total Cases:{covidData.Confirmed}</h1>\r\n            <h1>Total Active:{covidData.Active} </h1>\r\n            <h1>Total Deaths:{covidData.Deaths} </h1>\r\n            <h1>Total Recovered:{covidData.Recovered} </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CovidInfo","import React, { useState } from 'react'\r\n\r\nfunction CountriesDropDown(props){\r\n\r\n    const [countries,setCountries]=useState([])\r\n\r\n    const onChange = (e) => {\r\n        console.log(e.target.value)\r\n        \r\n        props.selectedCountry(e.target.value)\r\n\r\n    }\r\n\r\n    const createSelectItems = () => {\r\n\r\n        const res = fetch(\"https://api.covid19api.com/countries\")\r\n        .then((res)=>res.json())\r\n        .then((res)=> {\r\n            console.log(res)\r\n            setCountries(res)\r\n        })\r\n\r\n        let items  = []\r\n        countries.forEach(country =>{\r\n            items.push(\r\n                <option key={country.Slug} value={country.Slug} >\r\n                    {country.Country}\r\n                </option>\r\n            )\r\n        })\r\n        return items\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <label htmlFor=\"countries\">\r\n                Select Country:\r\n            </label>\r\n            <select onChange={onChange}>\r\n                {createSelectItems()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountriesDropDown","import React,{useState} from 'react';\nimport './App.css';\nimport CovidInfo from './CovidInfo';\nimport CountriesDropDown from './CountriesDropDown';\n\nfunction App() {\n\n  const [country,setCountry] = useState(\"\")\n\n  const countrySelected = (childData) => {\n    console.log(childData)\n    setCountry(childData)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>\n        COVID 19 Tracker App in React\n      </h1>\n      \n      <CountriesDropDown selectedCountry = {countrySelected}></CountriesDropDown>\n      <CovidInfo country={country}></CovidInfo>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}